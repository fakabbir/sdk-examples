=========================
BundesGit for LibreOffice
=========================

This is a simple sample extension for LibreOffice written in Python. It is
self contained in that it contains the full source to build itself. To do so,
unpack the oxt-extension with any program able to read the zip format. Running
the script './build' in the unpacked source tree, will then recreate the
extension (and possible modifications).

Following below is a description of all the files in this extension and how
LibreOffice learns what to do with them.

For licensing information see the file ./description/license.txt


Extension entry points
======================

These files are the entry point LibreOffice uses to find out what to discover
the content of the extension:
- ./description.xml
  This file (and those that it references) describes the extension, its license
  in a human readable form.
- ./META-INF/manifest.xml
  This file explains the contents of the extension for LibreOffice to inject.


Files referenced from description.xml
=====================================
- ./description/license.txt
  License shown to the user on installation.
- ./description/description_en.txt
  Human readable description to show e.g. in the extension manager.
- ./description/extensionicon_42.png
  Icon to show e.g. in the extension manager


Files referenced from manifest.xml
==================================
- ./Accelerators.xcu
  Describes how this extension wants to modify the keyboard shortcuts.
  It sets up a Ctrl-Shift-G shortcut for LibreOffice Writer only that triggers
  the org.libreoffice.bundesgit.BundesGit service.
- ./BundesGit.py
  Python script that implements a service called
  org.libreoffice.bundesgit.BundesGit


Files not referenced anywhere and ignored at runtime
====================================================
- ./build
  A simple python script that packs the extension from the unpacked source.
- ./extensionname.txt
  A file hinting ./build how to name the produced .oxt file.
- ./README
  This file.
